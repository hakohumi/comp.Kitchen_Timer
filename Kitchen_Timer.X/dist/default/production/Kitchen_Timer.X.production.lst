

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jun 26 15:28:04 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.05
    26                           ; Generated 20/12/2018 GMT
    27                           ; 
    28                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F1827 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011B                     	;# 
   118  011D                     	;# 
   119  011E                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0191                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0194                     	;# 
   129  0195                     	;# 
   130  0196                     	;# 
   131  0199                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019C                     	;# 
   139  019D                     	;# 
   140  019E                     	;# 
   141  019F                     	;# 
   142  020C                     	;# 
   143  020D                     	;# 
   144  0211                     	;# 
   145  0211                     	;# 
   146  0212                     	;# 
   147  0212                     	;# 
   148  0213                     	;# 
   149  0213                     	;# 
   150  0214                     	;# 
   151  0214                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  0219                     	;# 
   160  021A                     	;# 
   161  021B                     	;# 
   162  021C                     	;# 
   163  021D                     	;# 
   164  021E                     	;# 
   165  021F                     	;# 
   166  0291                     	;# 
   167  0291                     	;# 
   168  0292                     	;# 
   169  0293                     	;# 
   170  0294                     	;# 
   171  0295                     	;# 
   172  0295                     	;# 
   173  0296                     	;# 
   174  0298                     	;# 
   175  0298                     	;# 
   176  0299                     	;# 
   177  029A                     	;# 
   178  029B                     	;# 
   179  029C                     	;# 
   180  029C                     	;# 
   181  029D                     	;# 
   182  029E                     	;# 
   183  029E                     	;# 
   184  0311                     	;# 
   185  0311                     	;# 
   186  0312                     	;# 
   187  0313                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  0394                     	;# 
   193  0395                     	;# 
   194  0396                     	;# 
   195  039A                     	;# 
   196  039C                     	;# 
   197  039D                     	;# 
   198  039E                     	;# 
   199  039F                     	;# 
   200  0415                     	;# 
   201  0416                     	;# 
   202  0417                     	;# 
   203  041C                     	;# 
   204  041D                     	;# 
   205  041E                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE9                     	;# 
   212  0FEA                     	;# 
   213  0FEB                     	;# 
   214  0FED                     	;# 
   215  0FEE                     	;# 
   216  0FEF                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011D                     	;# 
   277  011E                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019C                     	;# 
   296  019C                     	;# 
   297  019D                     	;# 
   298  019E                     	;# 
   299  019F                     	;# 
   300  020C                     	;# 
   301  020D                     	;# 
   302  0211                     	;# 
   303  0211                     	;# 
   304  0212                     	;# 
   305  0212                     	;# 
   306  0213                     	;# 
   307  0213                     	;# 
   308  0214                     	;# 
   309  0214                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0216                     	;# 
   314  0216                     	;# 
   315  0217                     	;# 
   316  0217                     	;# 
   317  0219                     	;# 
   318  021A                     	;# 
   319  021B                     	;# 
   320  021C                     	;# 
   321  021D                     	;# 
   322  021E                     	;# 
   323  021F                     	;# 
   324  0291                     	;# 
   325  0291                     	;# 
   326  0292                     	;# 
   327  0293                     	;# 
   328  0294                     	;# 
   329  0295                     	;# 
   330  0295                     	;# 
   331  0296                     	;# 
   332  0298                     	;# 
   333  0298                     	;# 
   334  0299                     	;# 
   335  029A                     	;# 
   336  029B                     	;# 
   337  029C                     	;# 
   338  029C                     	;# 
   339  029D                     	;# 
   340  029E                     	;# 
   341  029E                     	;# 
   342  0311                     	;# 
   343  0311                     	;# 
   344  0312                     	;# 
   345  0313                     	;# 
   346  0318                     	;# 
   347  0318                     	;# 
   348  0319                     	;# 
   349  031A                     	;# 
   350  0394                     	;# 
   351  0395                     	;# 
   352  0396                     	;# 
   353  039A                     	;# 
   354  039C                     	;# 
   355  039D                     	;# 
   356  039E                     	;# 
   357  039F                     	;# 
   358  0415                     	;# 
   359  0416                     	;# 
   360  0417                     	;# 
   361  041C                     	;# 
   362  041D                     	;# 
   363  041E                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE9                     	;# 
   370  0FEA                     	;# 
   371  0FEB                     	;# 
   372  0FED                     	;# 
   373  0FEE                     	;# 
   374  0FEF                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  008C                     	;# 
   405  008D                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0094                     	;# 
   410  0095                     	;# 
   411  0096                     	;# 
   412  0097                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  0111                     	;# 
   424  0112                     	;# 
   425  0113                     	;# 
   426  0114                     	;# 
   427  0115                     	;# 
   428  0116                     	;# 
   429  0117                     	;# 
   430  0118                     	;# 
   431  0119                     	;# 
   432  011A                     	;# 
   433  011B                     	;# 
   434  011D                     	;# 
   435  011E                     	;# 
   436  018C                     	;# 
   437  018D                     	;# 
   438  0191                     	;# 
   439  0191                     	;# 
   440  0192                     	;# 
   441  0193                     	;# 
   442  0193                     	;# 
   443  0193                     	;# 
   444  0194                     	;# 
   445  0195                     	;# 
   446  0196                     	;# 
   447  0199                     	;# 
   448  019A                     	;# 
   449  019B                     	;# 
   450  019B                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019C                     	;# 
   454  019C                     	;# 
   455  019D                     	;# 
   456  019E                     	;# 
   457  019F                     	;# 
   458  020C                     	;# 
   459  020D                     	;# 
   460  0211                     	;# 
   461  0211                     	;# 
   462  0212                     	;# 
   463  0212                     	;# 
   464  0213                     	;# 
   465  0213                     	;# 
   466  0214                     	;# 
   467  0214                     	;# 
   468  0215                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0216                     	;# 
   472  0216                     	;# 
   473  0217                     	;# 
   474  0217                     	;# 
   475  0219                     	;# 
   476  021A                     	;# 
   477  021B                     	;# 
   478  021C                     	;# 
   479  021D                     	;# 
   480  021E                     	;# 
   481  021F                     	;# 
   482  0291                     	;# 
   483  0291                     	;# 
   484  0292                     	;# 
   485  0293                     	;# 
   486  0294                     	;# 
   487  0295                     	;# 
   488  0295                     	;# 
   489  0296                     	;# 
   490  0298                     	;# 
   491  0298                     	;# 
   492  0299                     	;# 
   493  029A                     	;# 
   494  029B                     	;# 
   495  029C                     	;# 
   496  029C                     	;# 
   497  029D                     	;# 
   498  029E                     	;# 
   499  029E                     	;# 
   500  0311                     	;# 
   501  0311                     	;# 
   502  0312                     	;# 
   503  0313                     	;# 
   504  0318                     	;# 
   505  0318                     	;# 
   506  0319                     	;# 
   507  031A                     	;# 
   508  0394                     	;# 
   509  0395                     	;# 
   510  0396                     	;# 
   511  039A                     	;# 
   512  039C                     	;# 
   513  039D                     	;# 
   514  039E                     	;# 
   515  039F                     	;# 
   516  0415                     	;# 
   517  0416                     	;# 
   518  0417                     	;# 
   519  041C                     	;# 
   520  041D                     	;# 
   521  041E                     	;# 
   522  0FE4                     	;# 
   523  0FE5                     	;# 
   524  0FE6                     	;# 
   525  0FE7                     	;# 
   526  0FE8                     	;# 
   527  0FE9                     	;# 
   528  0FEA                     	;# 
   529  0FEB                     	;# 
   530  0FED                     	;# 
   531  0FEE                     	;# 
   532  0FEF                     	;# 
   533  0011                     _PIR1bits	set	17
   534  0016                     _TMR1L	set	22
   535  0017                     _TMR1H	set	23
   536  0018                     _T1CONbits	set	24
   537  0015                     _TMR0	set	21
   538  000C                     _PORTA	set	12
   539  000D                     _PORTB	set	13
   540  000B                     _INTCONbits	set	11
   541  0091                     _PIE1bits	set	145
   542  0095                     _OPTION_REGbits	set	149
   543  008C                     _TRISA	set	140
   544  008D                     _TRISB	set	141
   545  0099                     _OSCCONbits	set	153
   546  011D                     _APFCON0bits	set	285
   547  086E                     _LATB6	set	2158
   548  0869                     _LATB1	set	2153
   549  018C                     _ANSELA	set	396
   550  018D                     _ANSELB	set	397
   551  0291                     _CCPR1L	set	657
   552  0292                     _CCPR1H	set	658
   553  0293                     _CCP1CONbits	set	659
   554                           
   555                           ; #config settings
   556  0000                     
   557                           	psect	cinit
   558  001E                     start_initialization:	
   559  001E                     __initialization:	
   560                           
   561                           ; Clear objects allocated to COMMON
   562  001E  3070               	movlw	low __pbssCOMMON
   563  001F  0084               	movwf	4
   564  0020  3000               	movlw	high __pbssCOMMON
   565  0021  0085               	movwf	5
   566  0022  3009               	movlw	9
   567  0023  3180  20C2  3180   	fcall	clear_ram0
   568                           
   569                           ; Clear objects allocated to BANK0
   570  0026  3020               	movlw	low __pbssBANK0
   571  0027  0084               	movwf	4
   572  0028  3000               	movlw	high __pbssBANK0
   573  0029  0085               	movwf	5
   574  002A  300F               	movlw	15
   575  002B  3180  20C2         	fcall	clear_ram0
   576  002D                     end_of_initialization:	
   577                           ;End of C runtime variable initialization code
   578                           
   579  002D                     __end_of__initialization:	
   580  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   581  002E  0020               	movlb	0
   582  002F  3180  2831         	ljmp	_main	;jump to C main() function
   583                           
   584                           	psect	bssCOMMON
   585  0070                     __pbssCOMMON:	
   586  0070                     _ResetSWState:	
   587  0070                     	ds	3
   588  0073                     _SecondSWState:	
   589  0073                     	ds	3
   590  0076                     _MinuteSWState:	
   591  0076                     	ds	3
   592                           
   593                           	psect	bssBANK0
   594  0020                     __pbssBANK0:	
   595  0020                     _oldStartStopSWState:	
   596  0020                     	ds	3
   597  0023                     _oldoResetSWState:	
   598  0023                     	ds	3
   599  0026                     _oldSecondSWState:	
   600  0026                     	ds	3
   601  0029                     _oldMinuteSWState:	
   602  0029                     	ds	3
   603  002C                     _StartStopSWState:	
   604  002C                     	ds	3
   605                           
   606                           	psect	clrtext
   607  00C2                     clear_ram0:	
   608                           ;	Called with FSR0 containing the base address, and
   609                           ;	WREG with the size to clear
   610                           
   611  00C2  0064               	clrwdt	;clear the watchdog before getting into this loop
   612  00C3                     clrloop0:	
   613  00C3  0180               	clrf	0	;clear RAM location pointed to by FSR
   614  00C4  3101               	addfsr 0,1
   615  00C5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   616  00C6  28C3               	goto	clrloop0	;have we reached the end yet?
   617  00C7  3400               	retlw	0	;all done for this memory range, return
   618                           
   619                           	psect	cstackCOMMON
   620  0079                     __pcstackCOMMON:	
   621  0079                     ?_initIntrrupt:	
   622  0079                     ??_initIntrrupt:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0079                     ?_UpdateSWState:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0079                     ?_IsPushedMinuteSW:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0079                     ??_IsPushedMinuteSW:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0079                     ?_initOsc:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0079                     ??_initOsc:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0079                     ?_initPort:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0079                     ??_initPort:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0079                     ?_initIntTMR1:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0079                     ??_initIntTMR1:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0079                     ?_initIntCCP1:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0079                     ??_initIntCCP1:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0079                     ?_initIntExternal:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0079                     ??_initIntExternal:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0079                     ?_updateMinuteSWState:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0079                     ??_updateMinuteSWState:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0079                     ?_updateSecondSWState:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0079                     ??_updateSecondSWState:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0079                     ?_updateResetSWState:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0079                     ??_updateResetSWState:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0079                     ?_updateStartStopSWState:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0079                     ??_updateStartStopSWState:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0079                     ?_main:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0079                     ?_ISR:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0079                     ??_ISR:	
   695                           ; 1 bytes @ 0x0
   696                           
   697                           
   698                           ; 1 bytes @ 0x0
   699  0079                     	ds	1
   700  007A                     ??_UpdateSWState:	
   701  007A                     ??_main:	
   702                           ; 1 bytes @ 0x1
   703                           
   704                           
   705                           ; 1 bytes @ 0x1
   706  007A                     	ds	2
   707  007C                     main@State:	
   708                           
   709                           ; 1 bytes @ 0x3
   710  007C                     	ds	1
   711                           
   712                           	psect	maintext
   713  0031                     __pmaintext:	
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 34 in file "src/main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  State           1    3[COMMON] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : B1F/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   733 ;;      Params:         0       0       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0       0
   735 ;;      Temps:          2       0       0       0       0       0
   736 ;;      Totals:         3       0       0       0       0       0
   737 ;;Total ram usage:        3 bytes
   738 ;; Hardware stack levels required when called:    3
   739 ;; This function calls:
   740 ;;		_IsPushedMinuteSW
   741 ;;		_UpdateSWState
   742 ;;		_initIntrrupt
   743 ;; This function is called by:
   744 ;;		Startup code after reset
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _main
   750  0031                     _main:	
   751                           
   752                           ;src/main.c: 37:                 if (IsPushedMinuteSW()){;src/main.c: 40:               
      +                            break;
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   756  0031  01FC               	clrf	main@State
   757                           
   758                           ;src/main.c: 43:             case STOP_COUNTDOWN_STATE:
   759  0032  3180  2054  3180   	fcall	_initIntrrupt
   760                           
   761                           ;src/main.c: 49:     return;
   762  0035  2839               	goto	l988
   763  0036                     l990:	
   764                           
   765                           ;src/main.c: 53: 
   766  0036  3180  20D1  3180   	fcall	_IsPushedMinuteSW
   767  0039                     l988:	
   768                           
   769                           ;src/main.c: 47:         }
   770  0039  3180  2083  3180   	fcall	_UpdateSWState
   771  003C  087C               	movf	main@State,w
   772  003D  00FA               	movwf	??_main
   773  003E  01FB               	clrf	??_main+1
   774                           
   775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   776                           ; Switch size 1, requested type "simple"
   777                           ; Number of cases is 1, Range of values is 0 to 0
   778                           ; switch strategies available:
   779                           ; Name         Instructions Cycles
   780                           ; simple_byte            4     3 (average)
   781                           ; direct_byte            8     6 (fixed)
   782                           ; jumptable            260     6 (fixed)
   783                           ;	Chosen strategy is simple_byte
   784  003F  087B               	movf	??_main+1,w
   785  0040  3A00               	xorlw	0	; case 0
   786  0041  1903               	skipnz
   787  0042  2844               	goto	l1032
   788  0043  2839               	goto	l988
   789  0044                     l1032:	
   790                           
   791                           ; Switch size 1, requested type "simple"
   792                           ; Number of cases is 4, Range of values is 0 to 3
   793                           ; switch strategies available:
   794                           ; Name         Instructions Cycles
   795                           ; simple_byte           13     7 (average)
   796                           ; direct_byte           14     6 (fixed)
   797                           ; jumptable            260     6 (fixed)
   798                           ;	Chosen strategy is simple_byte
   799  0044  087A               	movf	??_main,w
   800  0045  3A00               	xorlw	0	; case 0
   801  0046  1903               	skipnz
   802  0047  2836               	goto	l990
   803  0048  3A01               	xorlw	1	; case 1
   804  0049  1903               	skipnz
   805  004A  2839               	goto	l988
   806  004B  3A03               	xorlw	3	; case 2
   807  004C  1903               	skipnz
   808  004D  2839               	goto	l988
   809  004E  3A01               	xorlw	1	; case 3
   810  004F  1903               	skipnz
   811  0050  2839               	goto	l988
   812  0051  2839               	goto	l988
   813  0052  3180  281C         	ljmp	start
   814  0054                     __end_of_main:	
   815                           
   816                           	psect	text1
   817  0054                     __ptext1:	
   818 ;; *************** function _initIntrrupt *****************
   819 ;; Defined at:
   820 ;;		line 68 in file "src/main.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0, pclath, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   834 ;;      Params:         0       0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    2
   841 ;; This function calls:
   842 ;;		_initIntCCP1
   843 ;;		_initIntExternal
   844 ;;		_initIntTMR1
   845 ;;		_initOsc
   846 ;;		_initPort
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _initIntrrupt
   854  0054                     _initIntrrupt:	
   855                           
   856                           ;src/main.c: 70: 
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _initIntrrupt: [wreg+status,2+status,0+pclath+cstack]
   860  0054  3180  20CD  3180   	fcall	_initOsc
   861                           
   862                           ;src/main.c: 71:     OSCCONbits.SCS = 0x00;
   863  0057  3180  2065  3180   	fcall	_initPort
   864                           
   865                           ;src/main.c: 73: }
   866  005A  3180  208F  3180   	fcall	_initIntTMR1
   867                           
   868                           ;src/main.c: 74: 
   869  005D  3180  2075  3180   	fcall	_initIntCCP1
   870                           
   871                           ;src/main.c: 75: void initPort(void) {
   872  0060  3180  20C8         	fcall	_initIntExternal
   873                           
   874                           ;src/main.c: 78:     PORTA = 0xFF;
   875  0062  170B               	bsf	11,6	;volatile
   876                           
   877                           ;src/main.c: 81: 
   878  0063  178B               	bsf	11,7	;volatile
   879  0064  0008               	return
   880  0065                     __end_of_initIntrrupt:	
   881                           
   882                           	psect	text2
   883  0065                     __ptext2:	
   884 ;; *************** function _initPort *****************
   885 ;; Defined at:
   886 ;;		line 91 in file "src/main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   900 ;;      Params:         0       0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_initIntrrupt
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           
   915                           ;psect for function _initPort
   916  0065                     _initPort:	
   917                           
   918                           ;src/main.c: 93: 
   919                           
   920                           ;incstack = 0
   921                           ; Regs used in _initPort: [wreg+status,2]
   922  0065  30FF               	movlw	255
   923  0066  0020               	movlb	0	; select bank0
   924  0067  008D               	movwf	13	;volatile
   925                           
   926                           ;src/main.c: 94: 
   927  0068  30FF               	movlw	255
   928  0069  008C               	movwf	12	;volatile
   929                           
   930                           ;src/main.c: 102:     OPTION_REGbits.TMR0CS = 0;
   931  006A  3001               	movlw	1
   932  006B  0021               	movlb	1	; select bank1
   933  006C  008D               	movwf	13	;volatile
   934                           
   935                           ;src/main.c: 103: 
   936  006D  3021               	movlw	33
   937  006E  008C               	movwf	12	;volatile
   938                           
   939                           ;src/main.c: 106: 
   940  006F  0023               	movlb	3	; select bank3
   941  0070  018D               	clrf	13	;volatile
   942                           
   943                           ;src/main.c: 107:     OPTION_REGbits.PS = 0b111;
   944  0071  018C               	clrf	12	;volatile
   945                           
   946                           ;src/main.c: 111: 
   947  0072  0022               	movlb	2	; select bank2
   948  0073  101D               	bcf	29,0	;volatile
   949  0074  0008               	return
   950  0075                     __end_of_initPort:	
   951                           
   952                           	psect	text3
   953  00CD                     __ptext3:	
   954 ;; *************** function _initOsc *****************
   955 ;; Defined at:
   956 ;;		line 85 in file "src/main.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   970 ;;      Params:         0       0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_initIntrrupt
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _initOsc
   986  00CD                     _initOsc:	
   987                           
   988                           ;src/main.c: 87:     TRISA = 0x21;
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   992  00CD  30FC               	movlw	-4
   993  00CE  0021               	movlb	1	; select bank1
   994  00CF  0599               	andwf	25,f	;volatile
   995  00D0  0008               	return
   996  00D1                     __end_of_initOsc:	
   997                           
   998                           	psect	text4
   999  008F                     __ptext4:	
  1000 ;; *************** function _initIntTMR1 *****************
  1001 ;; Defined at:
  1002 ;;		line 139 in file "src/main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1016 ;;      Params:         0       0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_initIntrrupt
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _initIntTMR1
  1032  008F                     _initIntTMR1:	
  1033                           
  1034                           ;src/main.c: 154:     T1CONbits.TMR1CS = 0b01;
  1035                           
  1036                           ;incstack = 0
  1037                           ; Regs used in _initIntTMR1: [wreg+status,2+status,0]
  1038  008F  0020               	movlb	0	; select bank0
  1039  0090  0818               	movf	24,w	;volatile
  1040  0091  393F               	andlw	-193
  1041  0092  3840               	iorlw	64
  1042  0093  0098               	movwf	24	;volatile
  1043                           
  1044                           ;src/main.c: 163:     T1CONbits.T1CKPS = 0b11;
  1045  0094  3030               	movlw	48
  1046  0095  0498               	iorwf	24,f	;volatile
  1047                           
  1048                           ;src/main.c: 166:     TMR1H = 0x00;
  1049  0096  0197               	clrf	23	;volatile
  1050                           
  1051                           ;src/main.c: 167:     TMR1L = 0x00;
  1052  0097  0196               	clrf	22	;volatile
  1053                           
  1054                           ;src/main.c: 170:     T1CONbits.TMR1ON = 1;
  1055  0098  1418               	bsf	24,0	;volatile
  1056  0099  0008               	return
  1057  009A                     __end_of_initIntTMR1:	
  1058                           
  1059                           	psect	text5
  1060  00C8                     __ptext5:	
  1061 ;; *************** function _initIntExternal *****************
  1062 ;; Defined at:
  1063 ;;		line 208 in file "src/main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		None
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1077 ;;      Params:         0       0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_initIntrrupt
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _initIntExternal
  1093  00C8                     _initIntExternal:	
  1094                           
  1095                           ;src/main.c: 213:     OPTION_REGbits.INTEDG = 0;
  1096                           
  1097                           ;incstack = 0
  1098                           ; Regs used in _initIntExternal: []
  1099  00C8  0021               	movlb	1	; select bank1
  1100  00C9  1315               	bcf	21,6	;volatile
  1101                           
  1102                           ;src/main.c: 216:     INTCONbits.INTF = 0;
  1103  00CA  108B               	bcf	11,1	;volatile
  1104                           
  1105                           ;src/main.c: 218:     INTCONbits.INTE = 1;
  1106  00CB  160B               	bsf	11,4	;volatile
  1107  00CC  0008               	return
  1108  00CD                     __end_of_initIntExternal:	
  1109                           
  1110                           	psect	text6
  1111  0075                     __ptext6:	
  1112 ;; *************** function _initIntCCP1 *****************
  1113 ;; Defined at:
  1114 ;;		line 190 in file "src/main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1128 ;;      Params:         0       0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0
  1131 ;;      Totals:         0       0       0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    1
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_initIntrrupt
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           
  1143                           ;psect for function _initIntCCP1
  1144  0075                     _initIntCCP1:	
  1145                           
  1146                           ;src/main.c: 194:     CCP1CONbits.CCP1M = 0b1011;
  1147                           
  1148                           ;incstack = 0
  1149                           ; Regs used in _initIntCCP1: [wreg+status,2+status,0]
  1150  0075  0025               	movlb	5	; select bank5
  1151  0076  0813               	movf	19,w	;volatile
  1152  0077  39F0               	andlw	-16
  1153  0078  380B               	iorlw	11
  1154  0079  0093               	movwf	19	;volatile
  1155                           
  1156                           ;src/main.c: 197:     CCPR1H = 0xF4;
  1157  007A  30F4               	movlw	244
  1158  007B  0092               	movwf	18	;volatile
  1159                           
  1160                           ;src/main.c: 198:     CCPR1L = 0x24;
  1161  007C  3024               	movlw	36
  1162  007D  0091               	movwf	17	;volatile
  1163                           
  1164                           ;src/main.c: 201:     PIR1bits.CCP1IF = 0;
  1165  007E  0020               	movlb	0	; select bank0
  1166  007F  1111               	bcf	17,2	;volatile
  1167                           
  1168                           ;src/main.c: 204:     PIE1bits.CCP1IE = 1;
  1169  0080  0021               	movlb	1	; select bank1
  1170  0081  1511               	bsf	17,2	;volatile
  1171  0082  0008               	return
  1172  0083                     __end_of_initIntCCP1:	
  1173                           
  1174                           	psect	text7
  1175  0083                     __ptext7:	
  1176 ;; *************** function _UpdateSWState *****************
  1177 ;; Defined at:
  1178 ;;		line 27 in file "src/SW.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1192 ;;      Params:         0       0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0
  1195 ;;      Totals:         0       0       0       0       0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    2
  1199 ;; This function calls:
  1200 ;;		_updateMinuteSWState
  1201 ;;		_updateResetSWState
  1202 ;;		_updateSecondSWState
  1203 ;;		_updateStartStopSWState
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _UpdateSWState
  1211  0083                     _UpdateSWState:	
  1212                           
  1213                           ;src/SW.c: 30:     updateMinuteSWState();
  1214                           
  1215                           ;incstack = 0
  1216                           ; Regs used in _UpdateSWState: [wreg+status,2+status,0+pclath+cstack]
  1217  0083  3180  20B0  3180   	fcall	_updateMinuteSWState
  1218                           
  1219                           ;src/SW.c: 33:     updateSecondSWState();
  1220  0086  3180  209A  3180   	fcall	_updateSecondSWState
  1221                           
  1222                           ;src/SW.c: 36:     updateResetSWState();
  1223  0089  3180  20A5  3180   	fcall	_updateResetSWState
  1224                           
  1225                           ;src/SW.c: 39:     updateStartStopSWState();
  1226  008C  3180  20BB         	fcall	_updateStartStopSWState
  1227  008E  0008               	return
  1228  008F                     __end_of_UpdateSWState:	
  1229                           
  1230                           	psect	text8
  1231  00BB                     __ptext8:	
  1232 ;; *************** function _updateStartStopSWState *****************
  1233 ;; Defined at:
  1234 ;;		line 139 in file "src/SW.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1248 ;;      Params:         0       0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0
  1250 ;;      Temps:          1       0       0       0       0       0
  1251 ;;      Totals:         1       0       0       0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    1
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_UpdateSWState
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function _updateStartStopSWState
  1264  00BB                     _updateStartStopSWState:	
  1265                           
  1266                           ;src/SW.c: 142:     StartStopSWState.PushedState = StartStopSWState.PushedFlag;
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _updateStartStopSWState: [wreg+status,2]
  1270  00BB  0020               	movlb	0	; select bank0
  1271  00BC  082C               	movf	_StartStopSWState,w
  1272  00BD  00F9               	movwf	??_updateStartStopSWState
  1273  00BE  0879               	movf	??_updateStartStopSWState,w
  1274  00BF  00AD               	movwf	_StartStopSWState+1
  1275                           
  1276                           ;src/SW.c: 144:     StartStopSWState.PushedFlag = 0;
  1277  00C0  01AC               	clrf	_StartStopSWState
  1278  00C1  0008               	return
  1279  00C2                     __end_of_updateStartStopSWState:	
  1280                           
  1281                           	psect	text9
  1282  009A                     __ptext9:	
  1283 ;; *************** function _updateSecondSWState *****************
  1284 ;; Defined at:
  1285 ;;		line 104 in file "src/SW.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1299 ;;      Params:         0       0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0
  1301 ;;      Temps:          1       0       0       0       0       0
  1302 ;;      Totals:         1       0       0       0       0       0
  1303 ;;Total ram usage:        1 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_UpdateSWState
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _updateSecondSWState
  1315  009A                     _updateSecondSWState:	
  1316                           
  1317                           ;src/SW.c: 106:     if (SecondSWState.PushedFlag) {
  1318                           
  1319                           ;incstack = 0
  1320                           ; Regs used in _updateSecondSWState: [wreg+status,2+status,0]
  1321  009A  0873               	movf	_SecondSWState,w
  1322  009B  1903               	btfsc	3,2
  1323  009C  28A3               	goto	l836
  1324                           
  1325                           ;src/SW.c: 108:         SecondSWState.PushedState = SecondSWState.PushedFlag;
  1326  009D  0873               	movf	_SecondSWState,w
  1327  009E  00F9               	movwf	??_updateSecondSWState
  1328  009F  0879               	movf	??_updateSecondSWState,w
  1329  00A0  00F4               	movwf	_SecondSWState+1
  1330                           
  1331                           ;src/SW.c: 110:         SecondSWState.PushedFlag = 0;
  1332  00A1  01F3               	clrf	_SecondSWState
  1333                           
  1334                           ;src/SW.c: 111:     } else {
  1335  00A2  0008               	return
  1336  00A3                     l836:	
  1337                           
  1338                           ;src/SW.c: 114:         SecondSWState.PushedState = 0;
  1339  00A3  01F4               	clrf	_SecondSWState+1
  1340  00A4  0008               	return
  1341  00A5                     __end_of_updateSecondSWState:	
  1342                           
  1343                           	psect	text10
  1344  00A5                     __ptext10:	
  1345 ;; *************** function _updateResetSWState *****************
  1346 ;; Defined at:
  1347 ;;		line 121 in file "src/SW.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1361 ;;      Params:         0       0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_UpdateSWState
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _updateResetSWState
  1377  00A5                     _updateResetSWState:	
  1378                           
  1379                           ;src/SW.c: 123:     if (MinuteSWState.PushedState & SecondSWState.PushedState) {
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in _updateResetSWState: [wreg+status,2+status,0]
  1383  00A5  0877               	movf	_MinuteSWState+1,w
  1384  00A6  0574               	andwf	_SecondSWState+1,w
  1385  00A7  1903               	btfsc	3,2
  1386  00A8  28AE               	goto	l844
  1387                           
  1388                           ;src/SW.c: 125:         MinuteSWState.PushedState = 0;
  1389  00A9  01F7               	clrf	_MinuteSWState+1
  1390                           
  1391                           ;src/SW.c: 126:         SecondSWState.PushedState = 0;
  1392  00AA  01F4               	clrf	_SecondSWState+1
  1393                           
  1394                           ;src/SW.c: 129:         ResetSWState.PushedState = 1;
  1395  00AB  01F1               	clrf	_ResetSWState+1
  1396  00AC  0AF1               	incf	_ResetSWState+1,f
  1397                           
  1398                           ;src/SW.c: 130:     } else {
  1399  00AD  0008               	return
  1400  00AE                     l844:	
  1401                           
  1402                           ;src/SW.c: 133:         ResetSWState.PushedState = 0;
  1403  00AE  01F1               	clrf	_ResetSWState+1
  1404  00AF  0008               	return
  1405  00B0                     __end_of_updateResetSWState:	
  1406                           
  1407                           	psect	text11
  1408  00B0                     __ptext11:	
  1409 ;; *************** function _updateMinuteSWState *****************
  1410 ;; Defined at:
  1411 ;;		line 88 in file "src/SW.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1425 ;;      Params:         0       0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0
  1427 ;;      Temps:          1       0       0       0       0       0
  1428 ;;      Totals:         1       0       0       0       0       0
  1429 ;;Total ram usage:        1 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_UpdateSWState
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _updateMinuteSWState
  1441  00B0                     _updateMinuteSWState:	
  1442                           
  1443                           ;src/SW.c: 90:     if (MinuteSWState.PushedFlag) {
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _updateMinuteSWState: [wreg+status,2+status,0]
  1447  00B0  0876               	movf	_MinuteSWState,w
  1448  00B1  1903               	btfsc	3,2
  1449  00B2  28B9               	goto	l828
  1450                           
  1451                           ;src/SW.c: 92:         MinuteSWState.PushedState = MinuteSWState.PushedFlag;
  1452  00B3  0876               	movf	_MinuteSWState,w
  1453  00B4  00F9               	movwf	??_updateMinuteSWState
  1454  00B5  0879               	movf	??_updateMinuteSWState,w
  1455  00B6  00F7               	movwf	_MinuteSWState+1
  1456                           
  1457                           ;src/SW.c: 94:         MinuteSWState.PushedFlag = 0;
  1458  00B7  01F6               	clrf	_MinuteSWState
  1459                           
  1460                           ;src/SW.c: 95:     } else {
  1461  00B8  0008               	return
  1462  00B9                     l828:	
  1463                           
  1464                           ;src/SW.c: 98:         MinuteSWState.PushedState = 0;
  1465  00B9  01F7               	clrf	_MinuteSWState+1
  1466  00BA  0008               	return
  1467  00BB                     __end_of_updateMinuteSWState:	
  1468                           
  1469                           	psect	text12
  1470  00D1                     __ptext12:	
  1471 ;; *************** function _IsPushedMinuteSW *****************
  1472 ;; Defined at:
  1473 ;;		line 147 in file "src/SW.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      _Bool 
  1480 ;; Registers used:
  1481 ;;		wreg
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1487 ;;      Params:         0       0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0
  1490 ;;      Totals:         0       0       0       0       0       0
  1491 ;;Total ram usage:        0 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    1
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _IsPushedMinuteSW
  1503  00D1                     _IsPushedMinuteSW:	
  1504                           
  1505                           ;src/SW.c: 149:     return MinuteSWState.PushedState;
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _IsPushedMinuteSW: [wreg]
  1509  00D1  0877               	movf	_MinuteSWState+1,w
  1510  00D2  0008               	return
  1511  00D3                     __end_of_IsPushedMinuteSW:	
  1512                           
  1513                           	psect	intentry
  1514  0004                     __pintentry:	
  1515 ;; *************** function _ISR *****************
  1516 ;; Defined at:
  1517 ;;		line 222 in file "src/main.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1531 ;;      Params:         0       0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0
  1534 ;;      Totals:         0       0       0       0       0       0
  1535 ;;Total ram usage:        0 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		Interrupt level 1
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544  0004                     _ISR:	
  1545                           
  1546                           ;incstack = 0
  1547  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1548                           
  1549                           ; Regs used in _ISR: [wreg]
  1550  0005  3180               	pagesel	$
  1551                           
  1552                           ;src/main.c: 225:     if (INTCONbits.TMR0IF == 1) {
  1553  0006  1D0B               	btfss	11,2	;volatile
  1554  0007  280C               	goto	i1l898
  1555                           
  1556                           ;src/main.c: 226:         LATB1 ^= 1;
  1557  0008  0022               	movlb	2	; select bank2
  1558  0009  3002               	movlw	2
  1559  000A  068D               	xorwf	13,f
  1560                           
  1561                           ;src/main.c: 227:         INTCONbits.TMR0IF = 0;
  1562  000B  110B               	bcf	11,2	;volatile
  1563  000C                     i1l898:	
  1564                           
  1565                           ;src/main.c: 231:     if (PIR1bits.CCP1IF == 1) {
  1566  000C  0020               	movlb	0	; select bank0
  1567  000D  1D11               	btfss	17,2	;volatile
  1568  000E  2814               	goto	i1l904
  1569                           
  1570                           ;src/main.c: 232:         LATB1 ^= 1;
  1571  000F  0022               	movlb	2	; select bank2
  1572  0010  3002               	movlw	2
  1573  0011  068D               	xorwf	13,f
  1574                           
  1575                           ;src/main.c: 233:         PIR1bits.CCP1IF = 0;
  1576  0012  0020               	movlb	0	; select bank0
  1577  0013  1111               	bcf	17,2	;volatile
  1578  0014                     i1l904:	
  1579                           
  1580                           ;src/main.c: 237:     if (INTCONbits.INTF == 1) {
  1581  0014  1C8B               	btfss	11,1	;volatile
  1582  0015  281A               	goto	i1l102
  1583                           
  1584                           ;src/main.c: 238:         LATB6 ^= 1;
  1585  0016  0022               	movlb	2	; select bank2
  1586  0017  3040               	movlw	64
  1587  0018  068D               	xorwf	13,f
  1588                           
  1589                           ;src/main.c: 240:         INTCONbits.INTF = 0;
  1590  0019  108B               	bcf	11,1	;volatile
  1591  001A                     i1l102:	
  1592  001A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1593  001B  0009               	retfie
  1594  001C                     __end_of_ISR:	
  1595  007E                     btemp	set	126	;btemp
  1596  007E                     int$flags	set	126
  1597  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      13
    BANK0            80      0      15
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _UpdateSWState->_updateMinuteSWState
    _UpdateSWState->_updateSecondSWState
    _UpdateSWState->_updateStartStopSWState

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      23
                                              1 COMMON     3     3      0
                   _IsPushedMinuteSW
                      _UpdateSWState
                       _initIntrrupt
 ---------------------------------------------------------------------------------
 (1) _initIntrrupt                                         0     0      0       0
                        _initIntCCP1
                    _initIntExternal
                        _initIntTMR1
                            _initOsc
                           _initPort
 ---------------------------------------------------------------------------------
 (2) _initPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIntTMR1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIntExternal                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIntCCP1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateSWState                                        0     0      0       0
                _updateMinuteSWState
                 _updateResetSWState
                _updateSecondSWState
             _updateStartStopSWState
 ---------------------------------------------------------------------------------
 (2) _updateStartStopSWState                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _updateSecondSWState                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _updateResetSWState                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _updateMinuteSWState                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _IsPushedMinuteSW                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IsPushedMinuteSW
   _UpdateSWState
     _updateMinuteSWState
     _updateResetSWState
     _updateSecondSWState
     _updateStartStopSWState
   _initIntrrupt
     _initIntCCP1
     _initIntExternal
     _initIntTMR1
     _initOsc
     _initPort

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       F       6       18.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      1C      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jun 26 15:28:04 2020

                ??_UpdateSWState 007A                      __CFG_CP$OFF 0000                              l828 00B9  
                            l844 00AE                              l836 00A3                              l990 0036  
                            l988 0039                     __CFG_CPD$OFF 0000                              _ISR 0004  
                            wreg 0009                     __CFG_LVP$OFF 0000                             ?_ISR 0079  
                           l1032 0044                             _TMR0 0015                             _main 0031  
                           fsr0h 0005                             indf0 0000                             fsr0l 0004  
                           btemp 007E                    __CFG_BOREN$ON 0000                             start 001C  
                   ?_initIntCCP1 0079                    __CFG_MCLRE$ON 0000                     ?_initIntTMR1 0079  
                          ??_ISR 0079                            ?_main 0079                    __CFG_WDTE$OFF 0000  
                          _LATB1 0869                            _LATB6 086E                            i1l102 001A  
                          i1l904 0014                            i1l898 000C                            _TMR1H 0017  
                          _TMR1L 0016                            _PORTA 000C                            _PORTB 000D  
                          _TRISA 008C                            _TRISB 008D                    __CFG_PWRTE$ON 0000  
                __end_of_initOsc 00D1                            status 0003                            wtemp0 007E  
               ?_initIntExternal 0079                  __initialization 001E                     __end_of_main 0054  
            _oldStartStopSWState 0020                    ?_initIntrrupt 0079                           ??_main 007A  
                         _CCPR1H 0292                           _CCPR1L 0291                           _ANSELA 018C  
                         _ANSELB 018D                ?_IsPushedMinuteSW 0079               ??_IsPushedMinuteSW 0079  
    __size_of_updateResetSWState 000B                 __end_of_initPort 0075                   ??_initIntrrupt 0079  
                      ??_initOsc 0079          __end_of__initialization 002D                   __pcstackCOMMON 0079  
           __size_of_initIntCCP1 000E             __size_of_initIntTMR1 000B                   _OPTION_REGbits 0095  
   __size_of_updateMinuteSWState 000B     __size_of_updateSecondSWState 000B                       __pbssBANK0 0020  
                     __pmaintext 0031                       __pintentry 0004            __end_of_UpdateSWState 008F  
               _oldMinuteSWState 0029                 _oldSecondSWState 0026                 _StartStopSWState 002C  
       ??_updateStartStopSWState 0079                    _MinuteSWState 0076                    _SecondSWState 0073  
                      ?_initPort 0079             __end_of_initIntrrupt 0065                          __ptext1 0054  
                        __ptext2 0065                          __ptext3 00CD                          __ptext4 008F  
                        __ptext5 00C8                          __ptext6 0075                          __ptext7 0083  
                        __ptext8 00BB                          __ptext9 009A                     __size_of_ISR 0018  
                      _T1CONbits 0018                          _initOsc 00CD                          clrloop0 00C3  
           end_of_initialization 002D                       ??_initPort 0079         __size_of_initIntExternal 0005  
      __size_of_IsPushedMinuteSW 0002                 __CFG_FOSC$INTOSC 0000  __size_of_updateStartStopSWState 0007  
                    _CCP1CONbits 0293              _updateMinuteSWState 00B0       __end_of_updateResetSWState 00B0  
            _updateSecondSWState 009A             ?_updateMinuteSWState 0079              start_initialization 001E  
                    __end_of_ISR 001C             ?_updateSecondSWState 0079            __size_of_initIntrrupt 0011  
                  ??_initIntCCP1 0079                      _APFCON0bits 011D                    ??_initIntTMR1 0079  
         _updateStartStopSWState 00BB                     _initIntrrupt 0054            ??_updateMinuteSWState 0079  
                    __pbssCOMMON 0070                        ___latbits 0001            ??_updateSecondSWState 0079  
              ??_initIntExternal 0079                __size_of_initPort 0010                 _oldoResetSWState 0023  
            __end_of_initIntCCP1 0083              __end_of_initIntTMR1 009A                 _IsPushedMinuteSW 00D1  
                       ?_initOsc 0079           __size_of_UpdateSWState 000C                        clear_ram0 00C2  
                       _PIE1bits 0091                         _PIR1bits 0011                     _ResetSWState 0070  
                      main@State 007C                      _initIntCCP1 0075                      _initIntTMR1 008F  
                  _UpdateSWState 0083               _updateResetSWState 00A5                 __size_of_initOsc 0004  
                       __ptext10 00A5                         __ptext11 00B0                         __ptext12 00D1  
            ?_updateResetSWState 0079                         _initPort 0065                    __size_of_main 0023  
        ?_updateStartStopSWState 0079                         int$flags 007E             ??_updateResetSWState 0079  
                 ?_UpdateSWState 0079                  _initIntExternal 00C8                       _INTCONbits 000B  
                       intlevel1 0000   __end_of_updateStartStopSWState 00C2         __end_of_IsPushedMinuteSW 00D3  
                     _OSCCONbits 0099      __end_of_updateMinuteSWState 00BB      __end_of_updateSecondSWState 00A5  
        __end_of_initIntExternal 00CD  
